{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAIaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,2BAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAU,CAAEH,WAAW,4BAAD,OAA8BE,EAAME,IAApC,QAd/B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BF,KAAKR,MAAMC,mBApBhD,GAAyBU,IAAMC,W,MCC/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.2791783c.chunk.js","sourcesContent":["import React from 'react';\n\n// class component\n\nexport class App extends React.Component {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState(({ pressedKey: `The last pressed key is [${event.key}]` }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{this.state.pressedKey}</p>\n      </div>\n    );\n  }\n}\n\n// functional component\n\n// export const App: React.FC = () => {\n//   const [char, setChar] = React.useState('');\n//   const isFirstRender = React.useRef(true);\n\n//   if (char) {\n//     isFirstRender.current = false;\n//   }\n\n//   const handleKeyUp = (event: KeyboardEvent) => setChar(event.key);\n\n//   document.addEventListener('keyup', handleKeyUp);\n\n//   return (\n//     <div className=\"App\">\n//       {!isFirstRender.current\n//         ? (\n//           <p className=\"App__message\">\n//             {`The last pressed key is [${char}]`}\n//           </p>\n//         ) : (\n//           <p className=\"App__message\">Nothing was pressed yet</p>\n//         )}\n//     </div>\n//   );\n// };\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}